[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "neon-tree-classification"
version = "0.1.0"
description = "A comprehensive multi-modal tree species classification dataset and training framework using NEON remote sensing data"
authors = [
    {name = "Ritesh Chowdhry", email = "ritesh313@example.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
keywords = ["neon", "tree-species", "classification", "remote-sensing", "hyperspectral", "lidar", "pytorch-lightning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Scientific/Engineering :: Information Analysis",
]
dependencies = [
    # Core functionality (dataset + visualization)
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "matplotlib>=3.6.0",
    "rasterio>=1.3.0",
    "scikit-learn>=1.2.0",

    # ML framework (for training examples)
    "torch>=2.0.0",
    "lightning>=2.1.0",  # Updated to use new Lightning package
    "torchmetrics>=0.11.0",
    "h5py>=3.7.0",  # Required for HDF5 dataset files
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "jupyter>=1.0.0",
    "ipykernel>=6.0.0",  # For Jupyter notebook support
    "pre-commit>=3.0.0",  # For code quality
]
processing = [
    # Only needed for advanced data processing
    "geopandas>=0.12.0",
    "shapely>=2.0.0",
    "pyproj>=3.4.0",
    "opencv-python>=4.7.0",
    "rpy2>=3.5.0",  # For NEON R package integration
]
logging = [
    "comet-ml>=3.35.0",
    "tensorboard>=2.12.0",
    "wandb>=0.15.0",  # Popular ML experiment tracking
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=2.0.0",  # For Markdown in docs
]

[project.scripts]
neon-download = "scripts.download_dataset:main"
neon-train = "examples.train:main"

[project.urls]
Homepage = "https://github.com/Ritesh313/NeonTreeClassification"
Repository = "https://github.com/Ritesh313/NeonTreeClassification"
Issues = "https://github.com/Ritesh313/NeonTreeClassification/issues"
Documentation = "https://github.com/Ritesh313/NeonTreeClassification/blob/main/README.md"
Changelog = "https://github.com/Ritesh313/NeonTreeClassification/releases"

[tool.setuptools.packages.find]
where = ["."]
include = ["neon_tree_classification*"]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | _neon_tree_classification_dataset_files
)/
'''

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.ruff]
target-version = "py310"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "_neon_tree_classification_dataset_files",
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
